{% extends '_layout.' + getConfig('viewExtension') %}

{% macro field(key, value, parent) %}
    {% if parent != '' %}
        {% set attributeKey = parent + '-' + key %}
    {% else %}
        {% set attributeKey = key %}
    {% endif %}
    <div class="form-group">
        <label for="{{ attributeKey }}">{{ key | capitalize }}:</label>
        {% if value.arrInput == 'select' %}
            <select name="{{ attributeKey }}" id="{{ attributeKey }}" class="form-control">
                {% for v in value.enum %}
                    <option value="{{ v }}">{{ v }}</option>
                {% endfor %}
            </select>
        {% elseif value.arrInput == 'checkbox' %}
            <input type="checkbox" name="{{ attributeKey }}" id="{{ attributeKey }}">
        {% elseif value.arrInput == 'textarea' %}
            <textarea name="{{ attributeKey }}" id="{{ attributeKey }}" cols="30" rows="10"
                      class="form-control"></textarea>
        {% elseif value.arrInput == 'file' %}
            <input type="file" class="form-control" id="{{ attributeKey }}" name="{{ attributeKey }}">
        {% else %}
            <input type="{{ value.arrInput }}" class="form-control" id="{{ attributeKey }}" name="{{ attributeKey }}">
        {% endif %}
    </div>
{% endmacro %}

{% macro dynamicField(key, value, parent) %}
    {% if parent != '' %}
        {% set attributeKey = parent + '-' + key %}
    {% else %}
        {% set attributeKey = key %}
    {% endif %}
    <div class="form-group" id="{{ attributeKey }}">
        <label for="{{ attributeKey }}">{{ key | capitalize }}:</label>
        <button class="btn btn-sm btn-default" onClick="addInput(event,'{{ attributeKey }}');" type="button">+</button>
        <button class="btn btn-sm btn-default" onClick="removeLastInput(event);" type="button">-</button>
        {% if value.element == 'select' %}
            <select name="{{ attributeKey }}[]"  class="form-control">
                {% for v in value.enum %}
                    <option value="{{ v }}">{{ v }}</option>
                {% endfor %}
            </select>
        {% elseif value.element == 'checkbox' %}
            <input type="checkbox" name="{{ attributeKey }}[]">
        {% elseif value.element == 'textarea' %}
            <textarea name="{{ attributeKey }}[]" cols="30" rows="10"
                      class="form-control"></textarea>
        {% elseif value.element == 'file' %}
            <input type="file" class="form-control" name="{{ attributeKey }}[]">
        {% else %}
            <input type="{{ value.element }}" class="form-control" name="{{ attributeKey }}[]">
        {% endif %}
    </div>
{% endmacro %}

{% macro template(arrTemplate = {}, parent = '') %}
    {% for key, value in arrTemplate %}
        {% if value.type == 'Nested' %}
            <fieldset>
                <legend>{{ key | capitalize }}:</legend>
                <div class="col-lg-offset-1">
                    {% if parent != '' %}
                        {% set key = parent + '-' + key %}
                    {% endif %}
                    {{ template(value.template, key) }}
                </div>
            </fieldset>
        {% elseif value.type == 'Array' %}
            {{ dynamicField(key, value, parent) }}
        {% elseif  value.type not in ['ObjectId', 'Mixed', 'Buffer'] %}
            {{ field(key, value, parent) }}
        {% endif %}
    {% endfor %}
{% endmacro %}

{% block content %}
    <div class="page-header">
        <h1>{{ name | capitalize }} create</h1>
        {% include '_messages.' + getConfig('viewExtension') %}
    </div>

    <div class="form-inline">
        <a class="btn btn-default" href="/{{ name | pluralize }}">Back</a>
    </div>

    <form action="/{{ name | pluralize }}" method="post">
        {{ template(arrTemplate) }}
        <button class="btn btn-primary" type="submit">Create</button>
    </form>
{% endblock %}

{% block jsExtends %}
    <script>
      function addInput(event, divName) {
        var parent = event.target.parentNode;
        var lastChild = parent.lastElementChild;
        if (lastChild.value) {
          var newChild = lastChild.cloneNode(true);
          newChild.value = "";
          document.getElementById(divName).appendChild(newChild);
        } else {
          lastChild.focus()
        }
      }
      function removeLastInput(event) {
        var parent = event.target.parentNode;
        var lastChild = parent.lastElementChild;
        var previousChild = lastChild.previousElementSibling;
        if (previousChild.nodeName !== 'BUTTON') {
          parent.removeChild(lastChild)
        }
      }
    </script>
{% endblock %}